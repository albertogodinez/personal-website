:root {
  --bgColorMenu: rgba(255, 255, 255, 1);
  --duration: 0.7s;
  --hoverDuration: 0.3s;
}

.wrapper {
  padding-block: 1.5em 0;
  width: min(90%, 512px);
  overflow: hidden;
  position: fixed;
  bottom: 1.25rem;
  left: 50%;
  transform: translateX(-50%);
  margin-bottom: 1rem;
}

.menu-container {
  position: relative;
}

.menu {
  font-size: var(--fs-base);
  background-color: var(--bgColorMenu);
  /* todo: make the following into a variable */
  box-shadow:
  /* Top shadow is none, so svg can appear seamlessly */
    0 -10px 10px -10px rgba(0, 0, 0, 0),
    0 10px 10px -10px rgba(0, 0, 0, 0.09),
    -10px 0 10px -10px rgba(0, 0, 0, 0.09),
    10px 0 10px -10px rgba(0, 0, 0, 0.09);
  width: 100%;
  padding: 0 2em;
  position: relative;
  border-radius: 10px;
  overflow-x: auto;
  scroll-behavior: smooth;
  white-space: nowrap;
}

.menu::-webkit-scrollbar {
  display: none;
}

.menu__item {
  all: unset;
  display: inline-flex;
  align-items: center;
  padding: 1em 0.5em;
  height: 100%;
  cursor: pointer;
  margin-inline: 0.5em;
  position: relative;
  transform: translateY(0);
  transition: transform var(--hoverDuration);
}

.menu__item-text {
  color: rgba(133, 133, 133, 0.5);
  transition: color var(--hoverDuration);
}

/* Base active state */
.menu__item.active {
  transform: translateY(-0.5em);
}

.menu__item.active .menu__item-text {
  color: #555555;
}

/* Reset active item when any non-active item is hovered */
.menu__item:not(.active):hover ~ .menu__item.active,
.menu__item:not(.active):hover + .menu__item.active,
.menu__item.active:has(~ .menu__item:hover) {
  transform: translateY(0);
}

.menu__item:not(.active):hover ~ .menu__item.active .menu__item-text,
.menu__item:not(.active):hover + .menu__item.active .menu__item-text,
.menu__item.active:has(~ .menu__item:hover) .menu__item-text {
  color: rgba(133, 133, 133, 0.5);
}

/* Hover state for menu items */
.menu__item:hover {
  transform: translateY(-0.5em);
}

.menu__item:hover .menu__item-text {
  color: #555555;
}

@media (hover: hover) and (pointer: fine) {
  .menu__item:hover {
    transform: translateY(-0.5em);
  }
}

.menu__dot {
  position: absolute;
  bottom: 0.75rem;
  left: 0;
  width: 10px;
  height: 10px;
  background-color: #555555;
  box-shadow: 0 0 20px rgba(243, 241, 234, 1);
  border-radius: 50%;
  transition:
    transform var(--hoverDuration),
    background-color var(--hoverDuration),
    width var(--hoverDuration) ease-in-out;
}

/* Adjust the movement to include scaling */
.menu__dot {
  transform: translateX(var(--dotPosition)) scale(1);
}

.menu__dot.active {
  /* animation: dot-elongate var(--duration) ease-in-out forwards; */
}

.menu__border {
  clip-path: url(#menu);
  position: absolute;
  left: 0;
  bottom: 94%;
  width: 7em;
  height: 2em;
  background-color: var(--bgColorMenu);
  transition: transform var(--hoverDuration);
  will-change: transform;
}

.svg-container {
  position: relative;
  height: 0;
}

@keyframes dot-elongate {
  0%,
  100% {
    width: 10px;
    border-radius: 50%;
  }
  30% {
    width: 50px;
    border-radius: 20%;
  }
}
