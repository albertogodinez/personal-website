@import '@radix-ui/colors/black-alpha.css';
@import '@radix-ui/colors/mauve.css';
@import '@radix-ui/colors/violet.css';

:root {
  font-size: 18px;
  --black-a7: rgba(0, 0, 0, 0.5);
  --grid-columns: 5;
  --grid-min-width: 300px;
  --grid-gap: 2.5rem;

  --spacing: 2rem;
  --spacing-half: 1rem;
  --spacing-double: 4rem;

  font-family: 'Poppins', sans-serif;
}
.card-preview-container {
  width: 300px;
  border-radius: 6px;
  overflow: hidden;
  box-shadow: 0 2px 10px var(--black-a7);
}

.ScrollAreaRoot {
  width: 200px;
  height: 225px;
  border-radius: 4px;
  overflow: hidden;
  box-shadow: 0 2px 10px var(--black-a7);
  background-color: white;
  --scrollbar-size: 10px;
}

.ScrollAreaViewport {
  width: 100%;
  height: 100%;
  border-radius: inherit;
}

.ScrollAreaScrollbar {
  display: flex;
  /* ensures no selection */
  user-select: none;
  /* disable browser handling of all panning and zooming gestures on touch devices */
  touch-action: none;
  padding: 2px;
  background: var(--black-a6);
  transition: background 160ms ease-out;
}
.ScrollAreaScrollbar:hover {
  background: var(--black-a8);
}
.ScrollAreaScrollbar[data-orientation='vertical'] {
  width: var(--scrollbar-size);
}
.ScrollAreaScrollbar[data-orientation='horizontal'] {
  flex-direction: column;
  height: var(--scrollbar-size);
}

.ScrollAreaThumb {
  flex: 1;
  background: var(--mauve-10);
  border-radius: var(--scrollbar-size);
  position: relative;
}
/* increase target size for touch devices https://www.w3.org/WAI/WCAG21/Understanding/target-size.html */
.ScrollAreaThumb::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  min-width: 44px;
  min-height: 44px;
}

.ScrollAreaCorner {
  background: var(--black-a8);
}

.Text {
  color: var(--violet-11);
  font-size: 15px;
  line-height: 18px;
  font-weight: 500;
}

.Tag {
  color: var(--mauve-12);
  font-size: 13px;
  line-height: 18px;
  margin-top: 10px;
  border-top: 1px solid var(--mauve-6);
  padding-top: 10px;
}

.grid {
  display: grid;
  justify-items: center;
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(100%, max(var(--grid-min-width), 100% / calc(var(--grid-columns) + 1))), 1fr)
  );
  gap: var(--grid-gap);
}

.grid[data-columns] {
  &[data-columns='1'] {
    --grid-columns: 1;
  }
  &[data-columns='2'] {
    --grid-columns: 2;
  }
  &[data-columns='3'] {
    --grid-columns: 3;
  }
  &[data-columns='4'] {
    --grid-columns: 4;
  }
  &[data-columns='5'] {
    --grid-columns: 5;
  }
  &[data-columns='6'] {
    --grid-columns: 6;
  }
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(100%, max(var(--grid-min-width), 100% / calc(var(--grid-columns) + 1))), 1fr)
  );
}

.grid[data-columns] {
  margin-bottom: var(--spacing-double);
  > div {
    padding: var(--spacing);
    background: rgba(255, 255, 255, 0.1);
    border-radius: 1rem;
  }
}

.image {
  object-fit: cover;
  width: 100%;
  height: 100%;
  /* TODO: Figure out why border-radius isn't changing */
  border-radius: 10px;
  z-index: -2;
}

h1 {
  /* TODO: Add as a variable */
  font-family: 'Poppins', sans-serif;
}

.page-width {
  max-width: 1250px;
  margin-inline: auto;
}

.content {
  position: relative;
  padding: 1rem;
  /* TODO: Fix this */
  box-shadow: 0 0 30px 0 rgba(0, 0, 0, 0.06);
  border-radius: 10px;
  overflow: hidden;
}

.content-info {
  position: absolute;
  padding: 2rem;

  transform: translateY(-100%);
  transition: 0.6s ease-in-out;
}

.content:hover .content-info,
.content:focus .content-info {
  transform: translateY(0);
}

.content-info__title {
  position: relative;
  /* TODO: Add as a variable */
  font-family: 'Abril Fatface', system-ui;
  font-size: 1.25rem;
  line-height: 1.3;
  text-transform: uppercase;
  margin-bottom: 1.5rem;
  padding-bottom: 1.5rem;
  z-index: 1000;
}

.content-info__title::after {
  position: absolute;
  content: '';
  bottom: 0;
  left: 0;
  width: 80%;
  height: 1px;
  /* TODO: convert this into its own variable */
  background-color: black;
}

.content-info__desc {
  position: relative;
  z-index: 1001;
}

.content-info__overlay {
  position: absolute;
  content: '';
  inset: 0;

  background: rgba(255, 255, 255, 0.7); /* You can adjust the alpha value for opacity */
  backdrop-filter: 'blur(10000px)'; /* You can adjust the pixel value for blur intensity */
  background-size: cover;
}
