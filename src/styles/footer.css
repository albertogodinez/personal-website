:root {
  --bgColorMenu: var(--bg-tertiary);
  --duration: 0.7s;
}

.wrapper {
  /* -webkit-tap-highlight-color: transparent;

  transition: background-color var(--duration); */
  display: flex;
  justify-content: center;
  padding: 6em 0;
}

.menu {
  /*! COULD REMOVE THE FOLLOWING TWO */
  font-size: 1.5em;
  background-color: var(--bgColorMenu);

  width: 32.05em;

  display: flex;
  justify-content: center;
  padding: 0 2.85em;
  position: relative;
}

.menu__item {
  /* z-index: 1; */
  all: unset;
  flex-grow: 1;
  position: relative;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.2em 0 1.4em;
  /* transition: transform var(--duration); */

  border-radius: 50%;
  /* The var inside a var is used as a kind of if statement. If the first isn't available, it uses the second one and vice versa  */
  transition: transform var(--timeOut, var(--duration));

  will-change: transform;
}

/* .menu__item::before {
  content: '';
  position: absolute;
  z-index: -1;
  width: 4.4em;
  height: 4.4em;
  border-radius: 50%;
  transform: scale(0);

  transition:
    background-color var(--duration),
    transform var(--duration);
} */

.menu__item-text {
  color: white; /* Update as per the design */
}

.menu__item.active {
  transform: translateY(-0.8em);

  /* This handles the changing color of active button */
  /* TODO: Could remove this later on */
  /* transform: scale(1); */
  /* background-color: var(--bgColorItem); */
}

/* ! this controlled the circle around the text */
/* .menu__item.active .menu__item-text {
  animation: stroker 1.5s reverse;
} */

.menu__dot {
  position: absolute;
  bottom: 0; /* Place dot underneath */
  left: 0;
  width: 10px;
  height: 10px;
  background-color: white; /* Dot color */
  border-radius: 50%;
  transition:
    transform var(--duration),
    background-color var(--duration);
}

.menu__item.active + .menu__dot {
  transform: translateX(calc(50% - 5px)); /* Adjust position under active item */
}

.menu__border {
  /* Access the svg using id from the html */
  clip-path: url(#menu);

  position: absolute;
  left: 0;
  bottom: 99%;

  /* Handle size of svg in with id menu */
  width: 10.9em;
  height: 2.7em;
  background-color: var(--bgColorMenu);
  transition: transform var(--timeOut, var(--duration));
  will-change: transform;
}

.svg-container {
  width: 0;
  height: 0;
}
