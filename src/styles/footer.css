:root {
  --bgColorMenu: var(--bg-tertiary);
  --duration: 0.7s;
}

.wrapper {
  -webkit-tap-highlight-color: transparent;

  transition: background-color var(--duration);
  display: flex;
  justify-content: center;
  padding: 6em 0;
}

.menu {
  width: 32.05em;
  font-size: 1.5em;
  background-color: var(--bgColorMenu);

  display: flex;
  justify-content: center;
  padding: 0 2.85em;
  position: relative;
}

/* TODO: Update this to use query containers instead */
@media screen and (max-width: 50em) {
  .menu {
    font-size: 0.8em;
  }
}

.menu__item {
  /* "all" resets every property of an element and requires you to set each property yourself */
  all: unset;
  flex-grow: 1;
  z-index: 1;
  position: relative;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.55em 0 0.85em;
  border-radius: 50%;
  /* The var inside a var is used as a kind of if statement. If the first isn't available, it uses the second one and vice versa  */
  transition: transform var(--timeOut, var(--duration));

  will-change: transform;
}

.menu__item-text {
  /* Helps view the icon */
  width: 2.6em;
  height: 2.6em;
  stroke: white;
  /* End of help */

  /* Beautification styling */
  stroke-width: 0.1em;
  stroke-dasharray: 400;
  stroke-miterlimit: 10;
  stroke-linecap: round;
  stroke-linejoin: round;
  /* End of Beautification styling */
}

.menu__item::before {
  content: '';
  position: absolute;
  z-index: -1;
  width: 4.4em;
  height: 4.4em;
  border-radius: 50%;
  transform: scale(0);

  /* You can combine two or more properties in transition */
  transition:
    background-color var(--duration),
    transform var(--duration);
}

.menu__item.active {
  /* This and the transition above handles the movement of the active button  */
  transform: translateY(-0.8em);
}

.menu__item.active::before {
  transform: scale(1);

  /* This handles the changing color of active button */
  background-color: var(--bgColorItem);
}

/* This handles movement of the icons from left to right */
.menu__item.active .menu__item-text {
  /* The reverse direction offers a smoother experience */
  animation: stroker 1.5s reverse;
}

@keyframes stroker {
  100% {
    stroke-dashoffset: 400;
  }
}

.menu__border {
  /* Access the svg using id from the html */
  clip-path: url(#menu);

  position: absolute;
  left: 0;
  bottom: 99%;

  /* Handle size of svg in with id menu */
  width: 10.9em;
  height: 2.7em;
  background-color: var(--bgColorMenu);
  transition: transform var(--timeOut, var(--duration));
  will-change: transform;
}

.svg-container {
  width: 0;
  height: 0;
}
