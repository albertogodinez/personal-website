---
import '@fontsource/abril-fatface';
import '@fontsource/poppins';
import CardPreview from '../components/CardPreview.jsx';
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import SelectWrapper from '../components/SelectWrapper.jsx';
import { selectedFavoriteType, selectedYear } from '../functionalityStore.js';
import { useStore } from '@nanostores/react';

const favorites = await getCollection('favorites');
// TODO: Move to a config file
const years = ['2019', '2020', '2021', '2022', '2023', '2024'];
const favoriteTypes = [
  'music',
  'movies',
  'books',
  'tv',
  'podcasts',
  'games',
  'apps',
  'products',
  'places',
  'food',
  'drinks',
  'events',
  'people',
  'memories',
  'misc'
];
---

<body>
  <h1>
    my favorite{' '}
    <SelectWrapper placeholder="things" options={favoriteTypes} selectionStoreKey={'SELECTED_YEAR'} client:load />{' '}
    of <SelectWrapper placeholder="all time" options={years} selectionStoreKey={'SELECTED_TYPE'} client:load />
  </h1>
  <div class="grid">
    {
      favorites.map((favorite: any) => (
        // <a href={p.slug}>{p.data.title}</a>
        <CardPreview title={'test1'} client:load>
          <Image class="image" src={favorite.data.image} alt="card preview" />
        </CardPreview>
      ))
    }
  </div>
</body>

<style is:global>
  body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
  }

  /* grid code */
  :root {
    font-size: 18px;
    --grid-columns: 5;
    --grid-min-width: 200px;
    --grid-gap: 2.5rem;

    --spacing: 2rem;
    --spacing-half: 1rem;
    --spacing-double: 4rem;
  }
  .grid {
    display: grid;
    justify-items: center;
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, max(var(--grid-min-width), 100% / calc(var(--grid-columns) + 1))), 1fr)
    );
    gap: var(--grid-gap);
  }

  .grid[data-columns] {
    &[data-columns='1'] {
      --grid-columns: 1;
    }
    &[data-columns='2'] {
      --grid-columns: 2;
    }
    &[data-columns='3'] {
      --grid-columns: 3;
    }
    &[data-columns='4'] {
      --grid-columns: 4;
    }
    &[data-columns='5'] {
      --grid-columns: 5;
    }
    &[data-columns='6'] {
      --grid-columns: 6;
    }
    grid-template-columns: repeat(
      auto-fit,
      minmax(min(100%, max(var(--grid-min-width), 100% / calc(var(--grid-columns) + 1))), 1fr)
    );
  }

  .grid[data-columns] {
    margin-bottom: var(--spacing-double);
    > div {
      padding: var(--spacing);
      background: rgba(255, 255, 255, 0.1);
      border-radius: 1rem;
    }
  }
  .image {
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  h1 {
    font-family: 'Poppins', sans-serif;
    /* font-family: 'Abril Fatface', system-ui; */
  }
</style>
